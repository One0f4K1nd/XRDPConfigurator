# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'XRDPConfiguratorMainWindow.ui'
##
## Created by: Qt User Interface Compiler version 5.15.2
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide2.QtCore import *
from PySide2.QtGui import *
from PySide2.QtWidgets import *

import XRDPConfigurator_resources_rc

class Ui_XRDPConfigurator(object):
    def setupUi(self, XRDPConfigurator):
        if not XRDPConfigurator.objectName():
            XRDPConfigurator.setObjectName(u"XRDPConfigurator")
        XRDPConfigurator.resize(1088, 767)
        sizePolicy = QSizePolicy(QSizePolicy.Fixed, QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(XRDPConfigurator.sizePolicy().hasHeightForWidth())
        XRDPConfigurator.setSizePolicy(sizePolicy)
        XRDPConfigurator.setMinimumSize(QSize(1088, 767))
        XRDPConfigurator.setMaximumSize(QSize(1088, 767))
        font = QFont()
        font.setFamily(u"Arial")
        font.setPointSize(12)
        XRDPConfigurator.setFont(font)
        XRDPConfigurator.setFocusPolicy(Qt.NoFocus)
        XRDPConfigurator.setAcceptDrops(False)
        XRDPConfigurator.setAutoFillBackground(True)
        XRDPConfigurator.setAnimated(True)
        XRDPConfigurator.setDocumentMode(False)
        XRDPConfigurator.setTabShape(QTabWidget.Rounded)
        XRDPConfigurator.setDockOptions(QMainWindow.AllowTabbedDocks|QMainWindow.AnimatedDocks)
        XRDPConfigurator.setUnifiedTitleAndToolBarOnMac(False)
        self.actionSave = QAction(XRDPConfigurator)
        self.actionSave.setObjectName(u"actionSave")
        self.actionSave.setEnabled(False)
        icon = QIcon()
        icon.addFile(u":/icons/images/icons/doc-save-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave.setIcon(icon)
        self.actionSave.setIconVisibleInMenu(True)
        self.actionQuit = QAction(XRDPConfigurator)
        self.actionQuit.setObjectName(u"actionQuit")
        icon1 = QIcon()
        icon1.addFile(u":/icons/images/icons/Actions-exit-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionQuit.setIcon(icon1)
        self.actionQuit.setIconVisibleInMenu(True)
        self.actionOpenXrdp_ini = QAction(XRDPConfigurator)
        self.actionOpenXrdp_ini.setObjectName(u"actionOpenXrdp_ini")
        icon2 = QIcon()
        icon2.addFile(u":/icons/images/icons/doc-open-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionOpenXrdp_ini.setIcon(icon2)
        #self.actionOpenXrdp_ini.setSoftKeyRole(QAction.PositiveSoftKey)
        self.actionOpenXrdp_ini.setIconVisibleInMenu(True)
        self.actionAbout = QAction(XRDPConfigurator)
        self.actionAbout.setObjectName(u"actionAbout")
        icon3 = QIcon()
        icon3.addFile(u":/icons/images/icons/XRDPConfiguratorWindowIcon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionAbout.setIcon(icon3)
        self.actionAbout.setIconVisibleInMenu(True)
        self.actionSave_as = QAction(XRDPConfigurator)
        self.actionSave_as.setObjectName(u"actionSave_as")
        self.actionSave_as.setEnabled(False)
        icon4 = QIcon()
        icon4.addFile(u":/icons/images/icons/doc-save-as-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionSave_as.setIcon(icon4)
        self.actionSave_as.setIconVisibleInMenu(True)
        self.actionPreview = QAction(XRDPConfigurator)
        self.actionPreview.setObjectName(u"actionPreview")
        self.actionPreview.setEnabled(False)
        icon5 = QIcon()
        icon5.addFile(u":/icons/images/icons/Actions-document-preview-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionPreview.setIcon(icon5)
        self.actionPreview.setIconVisibleInMenu(True)
        self.actionOpenSesman_ini = QAction(XRDPConfigurator)
        self.actionOpenSesman_ini.setObjectName(u"actionOpenSesman_ini")
        self.actionOpenSesman_ini.setIcon(icon2)
        self.actionXrdp_ini = QAction(XRDPConfigurator)
        self.actionXrdp_ini.setObjectName(u"actionXrdp_ini")
        self.actionXrdp_ini.setEnabled(False)
        self.actionXrdp_ini.setIcon(icon3)
        self.actionSesman_ini = QAction(XRDPConfigurator)
        self.actionSesman_ini.setObjectName(u"actionSesman_ini")
        self.actionSesman_ini.setEnabled(False)
        self.actionSesman_ini.setIcon(icon3)
        self.actionKeymaps = QAction(XRDPConfigurator)
        self.actionKeymaps.setObjectName(u"actionKeymaps")
        icon6 = QIcon()
        icon6.addFile(u":/icons/images/icons/Devices-input-keyboard-icon.png", QSize(), QIcon.Normal, QIcon.Off)
        self.actionKeymaps.setIcon(icon6)
        self.actionLogin_Window = QAction(XRDPConfigurator)
        self.actionLogin_Window.setObjectName(u"actionLogin_Window")
        self.actionLogin_Window.setEnabled(False)
        self.actionLogin_Window.setIcon(icon3)
        self.centralwidget = QWidget(XRDPConfigurator)
        self.centralwidget.setObjectName(u"centralwidget")
        self.centralwidget.setEnabled(True)
        self.stackedWidget = QStackedWidget(self.centralwidget)
        self.stackedWidget.setObjectName(u"stackedWidget")
        self.stackedWidget.setEnabled(True)
        self.stackedWidget.setGeometry(QRect(-1, -3, 1105, 685))
        sizePolicy1 = QSizePolicy(QSizePolicy.Minimum, QSizePolicy.Minimum)
        sizePolicy1.setHorizontalStretch(0)
        sizePolicy1.setVerticalStretch(0)
        sizePolicy1.setHeightForWidth(self.stackedWidget.sizePolicy().hasHeightForWidth())
        self.stackedWidget.setSizePolicy(sizePolicy1)
        self.stackedWidget.setFrameShape(QFrame.NoFrame)
        self.stackedWidget.setFrameShadow(QFrame.Plain)
        self.startup_page = QWidget()
        self.startup_page.setObjectName(u"startup_page")
        self.startup_page.setAutoFillBackground(True)
        self.WALLPAPER_3 = QLabel(self.startup_page)
        self.WALLPAPER_3.setObjectName(u"WALLPAPER_3")
        self.WALLPAPER_3.setGeometry(QRect(-2, 4, 1091, 676))
        self.WALLPAPER_3.setPixmap(QPixmap(u":/backgrounds/images/backgrounds/StackedWidgetBackground.png"))
        self.logo = QLabel(self.startup_page)
        self.logo.setObjectName(u"logo")
        self.logo.setGeometry(QRect(116, 150, 837, 293))
        sizePolicy.setHeightForWidth(self.logo.sizePolicy().hasHeightForWidth())
        self.logo.setSizePolicy(sizePolicy)
        font1 = QFont()
        font1.setStyleStrategy(QFont.NoAntialias)
        self.logo.setFont(font1)
        self.logo.setFrameShape(QFrame.NoFrame)
        self.logo.setFrameShadow(QFrame.Raised)
        self.logo.setLineWidth(3)
        self.logo.setText(u"")
        self.logo.setPixmap(QPixmap(u":/Logo/images/logos/XRDPConfiguratorLogoLarge.png"))
        self.logo.setScaledContents(True)
        self.logo.setTextInteractionFlags(Qt.NoTextInteraction)
        self.label_38 = QLabel(self.startup_page)
        self.label_38.setObjectName(u"label_38")
        self.label_38.setGeometry(QRect(834, 408, 53, 35))
        font2 = QFont()
        font2.setFamily(u"Arial")
        font2.setPointSize(14)
        font2.setBold(True)
        font2.setWeight(75)
        self.label_38.setFont(font2)
        self.label_6 = QLabel(self.startup_page)
        self.label_6.setObjectName(u"label_6")
        self.label_6.setGeometry(QRect(413, 604, 260, 61))
        self.label_6.setPixmap(QPixmap(u":/Logo/images/logos/ScaryGlidersCompactLogo.png"))
        self.label_6.setScaledContents(True)
        self.stackedWidget.addWidget(self.startup_page)
        self.xrdpIniEditPage = QWidget()
        self.xrdpIniEditPage.setObjectName(u"xrdpIniEditPage")
        sizePolicy2 = QSizePolicy(QSizePolicy.Expanding, QSizePolicy.Expanding)
        sizePolicy2.setHorizontalStretch(0)
        sizePolicy2.setVerticalStretch(0)
        sizePolicy2.setHeightForWidth(self.xrdpIniEditPage.sizePolicy().hasHeightForWidth())
        self.xrdpIniEditPage.setSizePolicy(sizePolicy2)
        self.xrdpIniEditPage.setAcceptDrops(False)
        self.xrdpIniEditPage.setAutoFillBackground(False)
        self.tabWidget = QTabWidget(self.xrdpIniEditPage)
        self.tabWidget.setObjectName(u"tabWidget")
        self.tabWidget.setGeometry(QRect(0, 4, 1087, 681))
        self.tabWidget.setAutoFillBackground(True)
        self.tabWidget.setStyleSheet(u"#tabWidget{\n"
"	font: 14pt \"Arial\";\n"
"}")
        self.tabWidget.setTabShape(QTabWidget.Rounded)
        self.tabWidget.setElideMode(Qt.ElideNone)
        self.tabWidget.setUsesScrollButtons(False)
        self.tabWidget.setDocumentMode(True)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(False)
        self.globalsSettings = QWidget()
        self.globalsSettings.setObjectName(u"globalsSettings")
        self.WALLPAPER_4 = QLabel(self.globalsSettings)
        self.WALLPAPER_4.setObjectName(u"WALLPAPER_4")
        self.WALLPAPER_4.setGeometry(QRect(-5, -20, 1091, 676))
        self.WALLPAPER_4.setPixmap(QPixmap(u":/backgrounds/images/backgrounds/StackedWidgetBackground.png"))
        self.label_49 = QLabel(self.globalsSettings)
        self.label_49.setObjectName(u"label_49")
        self.label_49.setGeometry(QRect(5, 10, 1076, 51))
        font3 = QFont()
        font3.setFamily(u"DejaVu Sans")
        font3.setPointSize(11)
        font3.setBold(False)
        font3.setWeight(50)
        font3.setStyleStrategy(QFont.PreferAntialias)
        self.label_49.setFont(font3)
#if QT_CONFIG(tooltip)
        self.label_49.setToolTip(u"")
#endif // QT_CONFIG(tooltip)
        self.label_49.setAutoFillBackground(False)
        self.label_49.setFrameShape(QFrame.StyledPanel)
        self.label_49.setFrameShadow(QFrame.Raised)
        self.label_49.setTextFormat(Qt.RichText)
        self.label_49.setScaledContents(True)
        self.label_49.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.label_49.setWordWrap(True)
        self.groupBox_4 = QGroupBox(self.globalsSettings)
        self.groupBox_4.setObjectName(u"groupBox_4")
        self.groupBox_4.setGeometry(QRect(5, 65, 486, 586))
        font4 = QFont()
        font4.setPointSize(14)
        font4.setBold(True)
        font4.setWeight(75)
        self.groupBox_4.setFont(font4)
        self.groupBox_4.setAutoFillBackground(False)
        self.groupBox_4.setAlignment(Qt.AlignCenter)
        self.autoRunComboBox = QComboBox(self.groupBox_4)
        self.autoRunComboBox.addItem("")
        self.autoRunComboBox.setObjectName(u"autoRunComboBox")
        self.autoRunComboBox.setGeometry(QRect(240, 200, 33, 31))
        self.autoRunComboBox.setMinimumSize(QSize(0, 31))
        self.autoRunComboBox.setFont(font)
        self.autoRunComboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        self.label_7 = QLabel(self.groupBox_4)
        self.label_7.setObjectName(u"label_7")
        self.label_7.setGeometry(QRect(47, 78, 187, 31))
        font5 = QFont()
        font5.setPointSize(12)
        font5.setBold(True)
        font5.setWeight(75)
        self.label_7.setFont(font5)
        self.label_7.setAutoFillBackground(False)
        self.label_7.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_7.setFrameShape(QFrame.StyledPanel)
        self.label_7.setFrameShadow(QFrame.Raised)
        self.label_7.setAlignment(Qt.AlignCenter)
        self.label_8 = QLabel(self.groupBox_4)
        self.label_8.setObjectName(u"label_8")
        self.label_8.setGeometry(QRect(47, 118, 187, 33))
        self.label_8.setFont(font5)
        self.label_8.setAutoFillBackground(False)
        self.label_8.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_8.setFrameShape(QFrame.StyledPanel)
        self.label_8.setFrameShadow(QFrame.Raised)
        self.label_8.setAlignment(Qt.AlignCenter)
        self.listeningAddressEntryBox = QLineEdit(self.groupBox_4)
        self.listeningAddressEntryBox.setObjectName(u"listeningAddressEntryBox")
        self.listeningAddressEntryBox.setEnabled(True)
        self.listeningAddressEntryBox.setGeometry(QRect(240, 36, 161, 31))
        font6 = QFont()
        font6.setPointSize(12)
        self.listeningAddressEntryBox.setFont(font6)
        self.listeningAddressEntryBox.setAutoFillBackground(False)
        self.listeningAddressEntryBox.setInputMethodHints(Qt.ImhDigitsOnly|Qt.ImhFormattedNumbersOnly)
        self.listeningAddressEntryBox.setText(u"")
        self.listeningAddressEntryBox.setAlignment(Qt.AlignCenter)
        self.listeningAddressEntryBox.setCursorMoveStyle(Qt.LogicalMoveStyle)
        self.listeningPortEntryBox = QLineEdit(self.groupBox_4)
        self.listeningPortEntryBox.setObjectName(u"listeningPortEntryBox")
        self.listeningPortEntryBox.setGeometry(QRect(240, 78, 161, 31))
        self.listeningPortEntryBox.setFont(font6)
        self.listeningPortEntryBox.setAutoFillBackground(False)
        self.listeningPortEntryBox.setAlignment(Qt.AlignCenter)
        self.maxBppComboBox = QComboBox(self.groupBox_4)
        self.maxBppComboBox.addItem("")
        self.maxBppComboBox.addItem("")
        self.maxBppComboBox.addItem("")
        self.maxBppComboBox.addItem("")
        self.maxBppComboBox.setObjectName(u"maxBppComboBox")
        self.maxBppComboBox.setGeometry(QRect(240, 118, 161, 33))
        self.maxBppComboBox.setFont(font)
        self.label_5 = QLabel(self.groupBox_4)
        self.label_5.setObjectName(u"label_5")
        self.label_5.setGeometry(QRect(47, 36, 187, 31))
        self.label_5.setFont(font5)
        self.label_5.setAutoFillBackground(False)
        self.label_5.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_5.setFrameShape(QFrame.StyledPanel)
        self.label_5.setFrameShadow(QFrame.Raised)
        self.label_5.setScaledContents(False)
        self.label_5.setAlignment(Qt.AlignCenter)
        self.label_14 = QLabel(self.groupBox_4)
        self.label_14.setObjectName(u"label_14")
        self.label_14.setGeometry(QRect(46, 160, 189, 33))
        self.label_14.setFont(font5)
        self.label_14.setAutoFillBackground(False)
        self.label_14.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_14.setFrameShape(QFrame.StyledPanel)
        self.label_14.setFrameShadow(QFrame.Raised)
        self.label_14.setAlignment(Qt.AlignCenter)
        self.label_9 = QLabel(self.groupBox_4)
        self.label_9.setObjectName(u"label_9")
        self.label_9.setGeometry(QRect(47, 200, 187, 33))
        self.label_9.setFont(font5)
        self.label_9.setAutoFillBackground(False)
        self.label_9.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_9.setFrameShape(QFrame.StyledPanel)
        self.label_9.setFrameShadow(QFrame.Raised)
        self.label_9.setAlignment(Qt.AlignCenter)
        self.cryptLevelComboBox = QComboBox(self.groupBox_4)
        self.cryptLevelComboBox.addItem("")
        self.cryptLevelComboBox.addItem("")
        self.cryptLevelComboBox.addItem("")
        self.cryptLevelComboBox.setObjectName(u"cryptLevelComboBox")
        self.cryptLevelComboBox.setGeometry(QRect(240, 160, 161, 33))
        self.cryptLevelComboBox.setFont(font)
        self.groupBox_5 = QGroupBox(self.groupBox_4)
        self.groupBox_5.setObjectName(u"groupBox_5")
        self.groupBox_5.setGeometry(QRect(5, 253, 476, 213))
        self.groupBox_5.setFont(font5)
        self.groupBox_5.setAlignment(Qt.AlignCenter)
        self.allowMultimonCheckBox = QCheckBox(self.groupBox_5)
        self.allowMultimonCheckBox.setObjectName(u"allowMultimonCheckBox")
        self.allowMultimonCheckBox.setGeometry(QRect(30, 180, 186, 21))
        self.allowMultimonCheckBox.setFont(font)
        self.allowMultimonCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.allowMultimonCheckBox.setChecked(False)
        self.tcpNoDelayCheckBox = QCheckBox(self.groupBox_5)
        self.tcpNoDelayCheckBox.setObjectName(u"tcpNoDelayCheckBox")
        self.tcpNoDelayCheckBox.setGeometry(QRect(254, 90, 186, 21))
        self.tcpNoDelayCheckBox.setFont(font)
        self.tcpNoDelayCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.tcpKeepAliveCheckBox = QCheckBox(self.groupBox_5)
        self.tcpKeepAliveCheckBox.setObjectName(u"tcpKeepAliveCheckBox")
        self.tcpKeepAliveCheckBox.setGeometry(QRect(254, 120, 186, 21))
        font7 = QFont()
        font7.setFamily(u"Arial")
        font7.setPointSize(12)
        font7.setBold(False)
        font7.setWeight(50)
        self.tcpKeepAliveCheckBox.setFont(font7)
        self.tcpKeepAliveCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useBitMapCacheCheckBox = QCheckBox(self.groupBox_5)
        self.useBitMapCacheCheckBox.setObjectName(u"useBitMapCacheCheckBox")
        self.useBitMapCacheCheckBox.setGeometry(QRect(29, 30, 211, 21))
        self.useBitMapCacheCheckBox.setFont(font7)
        self.useBitMapCacheCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useBitMapCacheCheckBox.setAutoFillBackground(False)
        self.useBulkCompCheckBox = QCheckBox(self.groupBox_5)
        self.useBulkCompCheckBox.setObjectName(u"useBulkCompCheckBox")
        self.useBulkCompCheckBox.setGeometry(QRect(29, 90, 211, 21))
        self.useBulkCompCheckBox.setFont(font)
        self.useBulkCompCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.enableChannelsCheckBox = QCheckBox(self.groupBox_5)
        self.enableChannelsCheckBox.setObjectName(u"enableChannelsCheckBox")
        self.enableChannelsCheckBox.setGeometry(QRect(29, 120, 211, 21))
        self.enableChannelsCheckBox.setFont(font)
        self.enableChannelsCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.enableChannelsCheckBox.setChecked(True)
        self.requireCredentialsCheckbox = QCheckBox(self.groupBox_5)
        self.requireCredentialsCheckbox.setObjectName(u"requireCredentialsCheckbox")
        self.requireCredentialsCheckbox.setGeometry(QRect(29, 150, 211, 21))
        self.requireCredentialsCheckbox.setFont(font)
        self.requireCredentialsCheckbox.setLayoutDirection(Qt.LeftToRight)
        self.requireCredentialsCheckbox.setChecked(False)
        self.hideLogWindowCheckBox = QCheckBox(self.groupBox_5)
        self.hideLogWindowCheckBox.setObjectName(u"hideLogWindowCheckBox")
        self.hideLogWindowCheckBox.setGeometry(QRect(254, 60, 186, 21))
        self.hideLogWindowCheckBox.setFont(font7)
        self.hideLogWindowCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.forkSessionsCheckBox = QCheckBox(self.groupBox_5)
        self.forkSessionsCheckBox.setObjectName(u"forkSessionsCheckBox")
        self.forkSessionsCheckBox.setGeometry(QRect(254, 30, 186, 21))
        self.forkSessionsCheckBox.setFont(font7)
        self.forkSessionsCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useBitMapCompCheckBox = QCheckBox(self.groupBox_5)
        self.useBitMapCompCheckBox.setObjectName(u"useBitMapCompCheckBox")
        self.useBitMapCompCheckBox.setGeometry(QRect(29, 60, 211, 21))
        self.useBitMapCompCheckBox.setFont(font)
        self.useBitMapCompCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.disableNewCursorsCheckBox = QCheckBox(self.groupBox_5)
        self.disableNewCursorsCheckBox.setObjectName(u"disableNewCursorsCheckBox")
        self.disableNewCursorsCheckBox.setGeometry(QRect(254, 150, 186, 21))
        self.disableNewCursorsCheckBox.setFont(font)
        self.disableNewCursorsCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.disableNewCursorsCheckBox.setChecked(False)
        self.pamErrorText = QLineEdit(self.groupBox_4)
        self.pamErrorText.setObjectName(u"pamErrorText")
        self.pamErrorText.setEnabled(False)
        self.pamErrorText.setGeometry(QRect(15, 520, 451, 33))
        self.pamErrorText.setFont(font)
        self.pamErrorText.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.additionalPamErrorTextCheckbox = QCheckBox(self.groupBox_4)
        self.additionalPamErrorTextCheckbox.setObjectName(u"additionalPamErrorTextCheckbox")
        self.additionalPamErrorTextCheckbox.setGeometry(QRect(15, 490, 211, 21))
        self.additionalPamErrorTextCheckbox.setFont(font)
        self.additionalPamErrorTextCheckbox.setLayoutDirection(Qt.LeftToRight)
        self.additionalPamErrorTextCheckbox.setChecked(False)
        self.groupBox_6 = QGroupBox(self.globalsSettings)
        self.groupBox_6.setObjectName(u"groupBox_6")
        self.groupBox_6.setGeometry(QRect(495, 328, 586, 323))
        self.groupBox_6.setFont(font4)
        self.groupBox_6.setAutoFillBackground(False)
        self.groupBox_6.setAlignment(Qt.AlignCenter)
        self.useXrdpVrCheckBox = QCheckBox(self.groupBox_6)
        self.useXrdpVrCheckBox.setObjectName(u"useXrdpVrCheckBox")
        self.useXrdpVrCheckBox.setGeometry(QRect(50, 245, 481, 21))
        self.useXrdpVrCheckBox.setFont(font7)
        self.useXrdpVrCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useClipRdrCheckBox = QCheckBox(self.groupBox_6)
        self.useClipRdrCheckBox.setObjectName(u"useClipRdrCheckBox")
        self.useClipRdrCheckBox.setGeometry(QRect(50, 189, 481, 21))
        self.useClipRdrCheckBox.setFont(font)
        self.useClipRdrCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useRdpSndCheckBox = QCheckBox(self.groupBox_6)
        self.useRdpSndCheckBox.setObjectName(u"useRdpSndCheckBox")
        self.useRdpSndCheckBox.setGeometry(QRect(50, 133, 481, 21))
        self.useRdpSndCheckBox.setFont(font7)
        self.useRdpSndCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useDrDynVcCheckBox = QCheckBox(self.groupBox_6)
        self.useDrDynVcCheckBox.setObjectName(u"useDrDynVcCheckBox")
        self.useDrDynVcCheckBox.setGeometry(QRect(50, 161, 481, 21))
        self.useDrDynVcCheckBox.setFont(font7)
        self.useDrDynVcCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useDrDynVcCheckBox.setAutoFillBackground(False)
        self.useRAILCheckBox = QCheckBox(self.groupBox_6)
        self.useRAILCheckBox.setObjectName(u"useRAILCheckBox")
        self.useRAILCheckBox.setGeometry(QRect(50, 217, 481, 21))
        self.useRAILCheckBox.setFont(font7)
        self.useRAILCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.useRdpDrCheckBox = QCheckBox(self.groupBox_6)
        self.useRdpDrCheckBox.setObjectName(u"useRdpDrCheckBox")
        self.useRdpDrCheckBox.setGeometry(QRect(50, 104, 481, 21))
        font8 = QFont()
        font8.setFamily(u"Arial")
        font8.setPointSize(12)
        font8.setBold(False)
        font8.setItalic(False)
        font8.setWeight(50)
        self.useRdpDrCheckBox.setFont(font8)
        self.useRdpDrCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.groupBox_3 = QGroupBox(self.globalsSettings)
        self.groupBox_3.setObjectName(u"groupBox_3")
        self.groupBox_3.setGeometry(QRect(495, 65, 586, 251))
        self.groupBox_3.setFont(font4)
        self.groupBox_3.setAutoFillBackground(False)
        self.groupBox_3.setAlignment(Qt.AlignCenter)
        self.enableSyslogCheckBox = QCheckBox(self.groupBox_3)
        self.enableSyslogCheckBox.setObjectName(u"enableSyslogCheckBox")
        self.enableSyslogCheckBox.setGeometry(QRect(85, 170, 226, 31))
        self.enableSyslogCheckBox.setFont(font7)
        self.enableSyslogCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.label_12 = QLabel(self.groupBox_3)
        self.label_12.setObjectName(u"label_12")
        self.label_12.setGeometry(QRect(376, 135, 136, 71))
        self.label_12.setFont(font5)
        self.label_12.setFrameShape(QFrame.StyledPanel)
        self.label_12.setFrameShadow(QFrame.Raised)
        self.label_12.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_11 = QLabel(self.groupBox_3)
        self.label_11.setObjectName(u"label_11")
        self.label_11.setGeometry(QRect(376, 50, 136, 66))
        self.label_11.setFont(font5)
        self.label_11.setFrameShape(QFrame.StyledPanel)
        self.label_11.setFrameShadow(QFrame.Raised)
        self.label_11.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_10 = QLabel(self.groupBox_3)
        self.label_10.setObjectName(u"label_10")
        self.label_10.setGeometry(QRect(86, 50, 226, 66))
        self.label_10.setFont(font5)
        self.label_10.setAutoFillBackground(False)
        self.label_10.setFrameShape(QFrame.StyledPanel)
        self.label_10.setFrameShadow(QFrame.Raised)
        self.label_10.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.logFileNameEntryBox = QLineEdit(self.groupBox_3)
        self.logFileNameEntryBox.setObjectName(u"logFileNameEntryBox")
        self.logFileNameEntryBox.setGeometry(QRect(100, 80, 201, 26))
        self.logFileNameEntryBox.setFont(font)
        self.logFileNameEntryBox.setAutoFillBackground(False)
        self.sysLogLevelComboBox = QComboBox(self.groupBox_3)
        self.sysLogLevelComboBox.addItem("")
        self.sysLogLevelComboBox.addItem("")
        self.sysLogLevelComboBox.addItem("")
        self.sysLogLevelComboBox.addItem("")
        self.sysLogLevelComboBox.addItem("")
        self.sysLogLevelComboBox.setObjectName(u"sysLogLevelComboBox")
        self.sysLogLevelComboBox.setEnabled(True)
        self.sysLogLevelComboBox.setGeometry(QRect(400, 170, 96, 25))
        font9 = QFont()
        font9.setPointSize(10)
        self.sysLogLevelComboBox.setFont(font9)
        self.sysLogLevelComboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        self.logLevelComboBox = QComboBox(self.groupBox_3)
        self.logLevelComboBox.addItem("")
        self.logLevelComboBox.addItem("")
        self.logLevelComboBox.addItem("")
        self.logLevelComboBox.addItem("")
        self.logLevelComboBox.addItem("")
        self.logLevelComboBox.setObjectName(u"logLevelComboBox")
        self.logLevelComboBox.setGeometry(QRect(400, 85, 96, 25))
        self.logLevelComboBox.setFont(font9)
        self.logLevelComboBox.setCursor(QCursor(Qt.PointingHandCursor))
        self.logLevelComboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        self.label_12.raise_()
        self.label_10.raise_()
        self.enableSyslogCheckBox.raise_()
        self.label_11.raise_()
        self.logFileNameEntryBox.raise_()
        self.sysLogLevelComboBox.raise_()
        self.logLevelComboBox.raise_()
        self.tabWidget.addTab(self.globalsSettings, "")
        self.sess_Tab = QWidget()
        self.sess_Tab.setObjectName(u"sess_Tab")
        self.WALLPAPER_2 = QLabel(self.sess_Tab)
        self.WALLPAPER_2.setObjectName(u"WALLPAPER_2")
        self.WALLPAPER_2.setGeometry(QRect(2, 0, 1087, 657))
        self.WALLPAPER_2.setPixmap(QPixmap(u":/backgrounds/images/backgrounds/StackedWidgetBackground.png"))
        self.sessionsTab = QTabWidget(self.sess_Tab)
        self.sessionsTab.setObjectName(u"sessionsTab")
        self.sessionsTab.setGeometry(QRect(5, 65, 1073, 551))
        font10 = QFont()
        font10.setFamily(u"Arial")
        font10.setPointSize(16)
        font10.setBold(False)
        font10.setItalic(False)
        font10.setWeight(50)
        self.sessionsTab.setFont(font10)
        self.sessionsTab.setAutoFillBackground(False)
        self.sessionsTab.setStyleSheet(u"#sessionsTab{\n"
"	font: 16pt \"Arial\";\n"
"}")
        self.sessionsTab.setDocumentMode(True)
        self.sessionsTab.setMovable(True)
        self.label_48 = QLabel(self.sess_Tab)
        self.label_48.setObjectName(u"label_48")
        self.label_48.setGeometry(QRect(15, 10, 811, 49))
        font11 = QFont()
        font11.setFamily(u"DejaVu Sans")
        font11.setPointSize(11)
        font11.setStyleStrategy(QFont.PreferAntialias)
        self.label_48.setFont(font11)
        self.label_48.setAutoFillBackground(False)
        self.label_48.setFrameShape(QFrame.StyledPanel)
        self.label_48.setFrameShadow(QFrame.Raised)
        self.label_48.setTextFormat(Qt.AutoText)
        self.label_48.setScaledContents(True)
        self.label_48.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.label_48.setWordWrap(True)
        self.addNewSessionButton = QPushButton(self.sess_Tab)
        self.addNewSessionButton.setObjectName(u"addNewSessionButton")
        self.addNewSessionButton.setGeometry(QRect(835, 10, 116, 46))
        self.addNewSessionButton.setFont(font)
        icon7 = QIcon()
        iconThemeName = u"add"
        if QIcon.hasThemeIcon(iconThemeName):
            icon7 = QIcon.fromTheme(iconThemeName)
        else:
            icon7.addFile(u"", QSize(), QIcon.Normal, QIcon.Off)
        
        self.addNewSessionButton.setIcon(icon7)
        self.deleteSessionButton = QPushButton(self.sess_Tab)
        self.deleteSessionButton.setObjectName(u"deleteSessionButton")
        self.deleteSessionButton.setGeometry(QRect(960, 10, 116, 46))
        self.deleteSessionButton.setFont(font)
        icon8 = QIcon()
        iconThemeName = u"remove"
        if QIcon.hasThemeIcon(iconThemeName):
            icon8 = QIcon.fromTheme(iconThemeName)
        else:
            icon8.addFile(u"", QSize(), QIcon.Normal, QIcon.Off)
        
        self.deleteSessionButton.setIcon(icon8)
        self.tabWidget.addTab(self.sess_Tab, "")
        self.stackedWidget.addWidget(self.xrdpIniEditPage)
        self.sesmanIniEditPage = QWidget()
        self.sesmanIniEditPage.setObjectName(u"sesmanIniEditPage")
        sizePolicy2.setHeightForWidth(self.sesmanIniEditPage.sizePolicy().hasHeightForWidth())
        self.sesmanIniEditPage.setSizePolicy(sizePolicy2)
        self.WALLPAPER = QLabel(self.sesmanIniEditPage)
        self.WALLPAPER.setObjectName(u"WALLPAPER")
        self.WALLPAPER.setGeometry(QRect(0, 0, 1089, 679))
        self.WALLPAPER.setAutoFillBackground(False)
        self.WALLPAPER.setPixmap(QPixmap(u":/backgrounds/images/backgrounds/StackedWidgetBackground.png"))
        self.sesmanGlobalsGroupBox = QGroupBox(self.sesmanIniEditPage)
        self.sesmanGlobalsGroupBox.setObjectName(u"sesmanGlobalsGroupBox")
        self.sesmanGlobalsGroupBox.setGeometry(QRect(5, 5, 511, 236))
        font12 = QFont()
        font12.setFamily(u"DejaVu Sans")
        font12.setPointSize(12)
        font12.setBold(True)
        font12.setWeight(75)
        self.sesmanGlobalsGroupBox.setFont(font12)
        self.sesmanGlobalsGroupBox.setAutoFillBackground(False)
        self.sesmanGlobalsGroupBox.setAlignment(Qt.AlignCenter)
        self.sesmanGlobalsGroupBox.setFlat(False)
        self.sesmanListeningPortEntryBox = QLineEdit(self.sesmanGlobalsGroupBox)
        self.sesmanListeningPortEntryBox.setObjectName(u"sesmanListeningPortEntryBox")
        self.sesmanListeningPortEntryBox.setGeometry(QRect(265, 65, 161, 31))
        self.sesmanListeningPortEntryBox.setFont(font6)
        self.sesmanListeningPortEntryBox.setAlignment(Qt.AlignCenter)
        self.label_19 = QLabel(self.sesmanGlobalsGroupBox)
        self.label_19.setObjectName(u"label_19")
        self.label_19.setGeometry(QRect(15, 30, 246, 31))
        font13 = QFont()
        font13.setPointSize(11)
        font13.setBold(True)
        font13.setWeight(75)
        self.label_19.setFont(font13)
        self.label_19.setAutoFillBackground(False)
        self.label_19.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_19.setFrameShape(QFrame.StyledPanel)
        self.label_19.setFrameShadow(QFrame.Raised)
        self.label_19.setScaledContents(False)
        self.label_19.setAlignment(Qt.AlignCenter)
        self.label_20 = QLabel(self.sesmanGlobalsGroupBox)
        self.label_20.setObjectName(u"label_20")
        self.label_20.setGeometry(QRect(15, 65, 246, 31))
        self.label_20.setFont(font5)
        self.label_20.setAutoFillBackground(False)
        self.label_20.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_20.setFrameShape(QFrame.StyledPanel)
        self.label_20.setFrameShadow(QFrame.Raised)
        self.label_20.setAlignment(Qt.AlignCenter)
        self.label_20.setTextInteractionFlags(Qt.NoTextInteraction)
        self.enableUserWindowManager = QCheckBox(self.sesmanGlobalsGroupBox)
        self.enableUserWindowManager.setObjectName(u"enableUserWindowManager")
        self.enableUserWindowManager.setGeometry(QRect(25, 105, 271, 31))
        font14 = QFont()
        font14.setFamily(u"Arial")
        font14.setPointSize(13)
        font14.setBold(True)
        font14.setWeight(75)
        self.enableUserWindowManager.setFont(font14)
        self.enableUserWindowManager.setLayoutDirection(Qt.LeftToRight)
        self.enableUserWindowManager.setAutoFillBackground(False)
        self.label_22 = QLabel(self.sesmanGlobalsGroupBox)
        self.label_22.setObjectName(u"label_22")
        self.label_22.setGeometry(QRect(254, 140, 233, 66))
        font15 = QFont()
        font15.setBold(True)
        font15.setWeight(75)
        self.label_22.setFont(font15)
        self.label_22.setAutoFillBackground(False)
        self.label_22.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_22.setFrameShape(QFrame.StyledPanel)
        self.label_22.setFrameShadow(QFrame.Raised)
        self.label_22.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_21 = QLabel(self.sesmanGlobalsGroupBox)
        self.label_21.setObjectName(u"label_21")
        self.label_21.setGeometry(QRect(15, 140, 226, 66))
        self.label_21.setFont(font15)
        self.label_21.setAutoFillBackground(False)
        self.label_21.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_21.setFrameShape(QFrame.StyledPanel)
        self.label_21.setFrameShadow(QFrame.Raised)
        self.label_21.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.sesmanListeningAddressEntryBox = QLineEdit(self.sesmanGlobalsGroupBox)
        self.sesmanListeningAddressEntryBox.setObjectName(u"sesmanListeningAddressEntryBox")
        self.sesmanListeningAddressEntryBox.setEnabled(True)
        self.sesmanListeningAddressEntryBox.setGeometry(QRect(265, 30, 161, 31))
        self.sesmanListeningAddressEntryBox.setFont(font6)
        self.sesmanListeningAddressEntryBox.setAutoFillBackground(False)
        self.sesmanListeningAddressEntryBox.setInputMethodHints(Qt.ImhDigitsOnly|Qt.ImhFormattedNumbersOnly)
        self.sesmanListeningAddressEntryBox.setInputMask(u"")
        self.sesmanListeningAddressEntryBox.setText(u"")
        self.sesmanListeningAddressEntryBox.setAlignment(Qt.AlignCenter)
        self.sesmanListeningAddressEntryBox.setCursorMoveStyle(Qt.LogicalMoveStyle)
        self.userWindowManagerEntryBox = QLineEdit(self.sesmanGlobalsGroupBox)
        self.userWindowManagerEntryBox.setObjectName(u"userWindowManagerEntryBox")
        self.userWindowManagerEntryBox.setGeometry(QRect(25, 170, 206, 26))
        self.userWindowManagerEntryBox.setAutoFillBackground(False)
        self.defaultWindowManagerEntryBox = QLineEdit(self.sesmanGlobalsGroupBox)
        self.defaultWindowManagerEntryBox.setObjectName(u"defaultWindowManagerEntryBox")
        self.defaultWindowManagerEntryBox.setGeometry(QRect(264, 170, 213, 26))
        self.defaultWindowManagerEntryBox.setAutoFillBackground(False)
        self.label_22.raise_()
        self.label_21.raise_()
        self.sesmanListeningPortEntryBox.raise_()
        self.label_19.raise_()
        self.label_20.raise_()
        self.enableUserWindowManager.raise_()
        self.sesmanListeningAddressEntryBox.raise_()
        self.userWindowManagerEntryBox.raise_()
        self.defaultWindowManagerEntryBox.raise_()
        self.sesmanSecurityGroupBox = QGroupBox(self.sesmanIniEditPage)
        self.sesmanSecurityGroupBox.setObjectName(u"sesmanSecurityGroupBox")
        self.sesmanSecurityGroupBox.setGeometry(QRect(5, 245, 511, 186))
        self.sesmanSecurityGroupBox.setFont(font15)
        self.sesmanSecurityGroupBox.setAutoFillBackground(False)
        self.sesmanSecurityGroupBox.setAlignment(Qt.AlignCenter)
        self.label_25 = QLabel(self.sesmanSecurityGroupBox)
        self.label_25.setObjectName(u"label_25")
        self.label_25.setGeometry(QRect(105, 140, 166, 21))
        self.alwaysCheckGroupCheckBox = QCheckBox(self.sesmanSecurityGroupBox)
        self.alwaysCheckGroupCheckBox.setObjectName(u"alwaysCheckGroupCheckBox")
        self.alwaysCheckGroupCheckBox.setGeometry(QRect(265, 35, 206, 26))
        self.alwaysCheckGroupCheckBox.setFont(font14)
        self.alwaysCheckGroupCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.alwaysCheckGroupCheckBox.setAutoFillBackground(False)
        self.label_24 = QLabel(self.sesmanSecurityGroupBox)
        self.label_24.setObjectName(u"label_24")
        self.label_24.setGeometry(QRect(259, 65, 233, 66))
        self.label_24.setFont(font15)
        self.label_24.setAutoFillBackground(False)
        self.label_24.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_24.setFrameShape(QFrame.StyledPanel)
        self.label_24.setFrameShadow(QFrame.Raised)
        self.label_24.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_23 = QLabel(self.sesmanSecurityGroupBox)
        self.label_23.setObjectName(u"label_23")
        self.label_23.setGeometry(QRect(20, 65, 226, 66))
        self.label_23.setFont(font15)
        self.label_23.setAutoFillBackground(False)
        self.label_23.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_23.setFrameShape(QFrame.StyledPanel)
        self.label_23.setFrameShadow(QFrame.Raised)
        self.label_23.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.terminalServiceAdminsEntryBox = QLineEdit(self.sesmanSecurityGroupBox)
        self.terminalServiceAdminsEntryBox.setObjectName(u"terminalServiceAdminsEntryBox")
        self.terminalServiceAdminsEntryBox.setGeometry(QRect(269, 95, 213, 26))
        self.terminalServiceAdminsEntryBox.setAutoFillBackground(False)
        self.allowRootLoginCheckBox = QCheckBox(self.sesmanSecurityGroupBox)
        self.allowRootLoginCheckBox.setObjectName(u"allowRootLoginCheckBox")
        self.allowRootLoginCheckBox.setGeometry(QRect(35, 35, 161, 26))
        self.allowRootLoginCheckBox.setFont(font14)
        self.allowRootLoginCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.maxLoginRetrySpinBox = QSpinBox(self.sesmanSecurityGroupBox)
        self.maxLoginRetrySpinBox.setObjectName(u"maxLoginRetrySpinBox")
        self.maxLoginRetrySpinBox.setGeometry(QRect(35, 137, 61, 27))
        self.maxLoginRetrySpinBox.setMaximum(30)
        self.terminalServiceUsersEntryBox = QLineEdit(self.sesmanSecurityGroupBox)
        self.terminalServiceUsersEntryBox.setObjectName(u"terminalServiceUsersEntryBox")
        self.terminalServiceUsersEntryBox.setGeometry(QRect(30, 95, 206, 26))
        self.terminalServiceUsersEntryBox.setAutoFillBackground(False)
        self.sesmanSessionsGroupBox = QGroupBox(self.sesmanIniEditPage)
        self.sesmanSessionsGroupBox.setObjectName(u"sesmanSessionsGroupBox")
        self.sesmanSessionsGroupBox.setGeometry(QRect(5, 435, 511, 241))
        self.sesmanSessionsGroupBox.setFont(font15)
        self.sesmanSessionsGroupBox.setAutoFillBackground(False)
        self.sesmanSessionsGroupBox.setAlignment(Qt.AlignCenter)
        self.killDisconnectedCheckBox = QCheckBox(self.sesmanSessionsGroupBox)
        self.killDisconnectedCheckBox.setObjectName(u"killDisconnectedCheckBox")
        self.killDisconnectedCheckBox.setGeometry(QRect(160, 160, 181, 31))
        self.killDisconnectedCheckBox.setFont(font14)
        self.killDisconnectedCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.disconnectedTimeLimitSpinBox = QSpinBox(self.sesmanSessionsGroupBox)
        self.disconnectedTimeLimitSpinBox.setObjectName(u"disconnectedTimeLimitSpinBox")
        self.disconnectedTimeLimitSpinBox.setGeometry(QRect(265, 110, 61, 27))
        self.x11DisplayOffsetSpinBox = QSpinBox(self.sesmanSessionsGroupBox)
        self.x11DisplayOffsetSpinBox.setObjectName(u"x11DisplayOffsetSpinBox")
        self.x11DisplayOffsetSpinBox.setGeometry(QRect(15, 65, 61, 27))
        self.idleTimeLimitSpinBox = QSpinBox(self.sesmanSessionsGroupBox)
        self.idleTimeLimitSpinBox.setObjectName(u"idleTimeLimitSpinBox")
        self.idleTimeLimitSpinBox.setGeometry(QRect(265, 65, 61, 27))
        self.label_29 = QLabel(self.sesmanSessionsGroupBox)
        self.label_29.setObjectName(u"label_29")
        self.label_29.setGeometry(QRect(335, 65, 151, 26))
        self.label_27 = QLabel(self.sesmanSessionsGroupBox)
        self.label_27.setObjectName(u"label_27")
        self.label_27.setGeometry(QRect(85, 110, 151, 26))
        self.maxSessionsSpinBox = QSpinBox(self.sesmanSessionsGroupBox)
        self.maxSessionsSpinBox.setObjectName(u"maxSessionsSpinBox")
        self.maxSessionsSpinBox.setGeometry(QRect(15, 110, 61, 27))
        self.label_28 = QLabel(self.sesmanSessionsGroupBox)
        self.label_28.setObjectName(u"label_28")
        self.label_28.setGeometry(QRect(335, 105, 116, 41))
        self.label_26 = QLabel(self.sesmanSessionsGroupBox)
        self.label_26.setObjectName(u"label_26")
        self.label_26.setGeometry(QRect(85, 65, 151, 26))
        self.groupBox = QGroupBox(self.sesmanIniEditPage)
        self.groupBox.setObjectName(u"groupBox")
        self.groupBox.setGeometry(QRect(520, 5, 556, 236))
        self.groupBox.setFont(font15)
        self.groupBox.setAutoFillBackground(False)
        self.groupBox.setAlignment(Qt.AlignCenter)
        self.enableSesmanSyslogCheckBox = QCheckBox(self.groupBox)
        self.enableSesmanSyslogCheckBox.setObjectName(u"enableSesmanSyslogCheckBox")
        self.enableSesmanSyslogCheckBox.setGeometry(QRect(75, 150, 256, 31))
        font16 = QFont()
        font16.setFamily(u"Arial")
        font16.setPointSize(12)
        font16.setBold(True)
        font16.setWeight(75)
        self.enableSesmanSyslogCheckBox.setFont(font16)
        self.enableSesmanSyslogCheckBox.setLayoutDirection(Qt.LeftToRight)
        self.enableSesmanSyslogCheckBox.setAutoFillBackground(False)
        self.label_31 = QLabel(self.groupBox)
        self.label_31.setObjectName(u"label_31")
        self.label_31.setGeometry(QRect(355, 50, 136, 66))
        self.label_31.setFont(font15)
        self.label_31.setAutoFillBackground(False)
        self.label_31.setFrameShape(QFrame.StyledPanel)
        self.label_31.setFrameShadow(QFrame.Raised)
        self.label_31.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_30 = QLabel(self.groupBox)
        self.label_30.setObjectName(u"label_30")
        self.label_30.setGeometry(QRect(65, 50, 226, 66))
        self.label_30.setFont(font15)
        self.label_30.setAutoFillBackground(False)
        self.label_30.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_30.setFrameShape(QFrame.StyledPanel)
        self.label_30.setFrameShadow(QFrame.Raised)
        self.label_30.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.label_32 = QLabel(self.groupBox)
        self.label_32.setObjectName(u"label_32")
        self.label_32.setGeometry(QRect(355, 130, 136, 71))
        self.label_32.setFont(font15)
        self.label_32.setFrameShape(QFrame.StyledPanel)
        self.label_32.setFrameShadow(QFrame.Raised)
        self.label_32.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.sesmanLogLevelComboBox = QComboBox(self.groupBox)
        self.sesmanLogLevelComboBox.addItem("")
        self.sesmanLogLevelComboBox.addItem("")
        self.sesmanLogLevelComboBox.addItem("")
        self.sesmanLogLevelComboBox.addItem("")
        self.sesmanLogLevelComboBox.addItem("")
        self.sesmanLogLevelComboBox.setObjectName(u"sesmanLogLevelComboBox")
        self.sesmanLogLevelComboBox.setGeometry(QRect(375, 80, 96, 25))
        font17 = QFont()
        font17.setPointSize(10)
        font17.setBold(False)
        font17.setWeight(50)
        self.sesmanLogLevelComboBox.setFont(font17)
        self.sesmanLogLevelComboBox.setCursor(QCursor(Qt.PointingHandCursor))
        self.sesmanLogLevelComboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        self.sesmanSysLogLevelComboBox = QComboBox(self.groupBox)
        self.sesmanSysLogLevelComboBox.addItem("")
        self.sesmanSysLogLevelComboBox.addItem("")
        self.sesmanSysLogLevelComboBox.addItem("")
        self.sesmanSysLogLevelComboBox.addItem("")
        self.sesmanSysLogLevelComboBox.addItem("")
        self.sesmanSysLogLevelComboBox.setObjectName(u"sesmanSysLogLevelComboBox")
        self.sesmanSysLogLevelComboBox.setEnabled(True)
        self.sesmanSysLogLevelComboBox.setGeometry(QRect(375, 165, 96, 25))
        self.sesmanSysLogLevelComboBox.setFont(font17)
        self.sesmanSysLogLevelComboBox.setSizeAdjustPolicy(QComboBox.AdjustToContents)
        self.sesmanLogFileNameEntryBox = QLineEdit(self.groupBox)
        self.sesmanLogFileNameEntryBox.setObjectName(u"sesmanLogFileNameEntryBox")
        self.sesmanLogFileNameEntryBox.setGeometry(QRect(76, 78, 206, 26))
        self.sesmanLogFileNameEntryBox.setAutoFillBackground(False)
        self.label_30.raise_()
        self.enableSesmanSyslogCheckBox.raise_()
        self.label_31.raise_()
        self.label_32.raise_()
        self.sesmanLogLevelComboBox.raise_()
        self.sesmanSysLogLevelComboBox.raise_()
        self.sesmanLogFileNameEntryBox.raise_()
        self.groupBox_2 = QGroupBox(self.sesmanIniEditPage)
        self.groupBox_2.setObjectName(u"groupBox_2")
        self.groupBox_2.setGeometry(QRect(520, 245, 556, 431))
        self.groupBox_2.setFont(font15)
        self.groupBox_2.setAutoFillBackground(False)
        self.groupBox_2.setAlignment(Qt.AlignCenter)
        self.xvncGroupBox = QGroupBox(self.groupBox_2)
        self.xvncGroupBox.setObjectName(u"xvncGroupBox")
        self.xvncGroupBox.setGeometry(QRect(5, 230, 547, 75))
        self.xvncGroupBox.setAlignment(Qt.AlignCenter)
        self.xvncParamsLineEdit = QLineEdit(self.xvncGroupBox)
        self.xvncParamsLineEdit.setObjectName(u"xvncParamsLineEdit")
        self.xvncParamsLineEdit.setGeometry(QRect(6, 28, 537, 27))
        self.x11rdpGroupBox = QGroupBox(self.groupBox_2)
        self.x11rdpGroupBox.setObjectName(u"x11rdpGroupBox")
        self.x11rdpGroupBox.setGeometry(QRect(3, 98, 547, 71))
        self.x11rdpGroupBox.setAutoFillBackground(False)
        self.x11rdpGroupBox.setAlignment(Qt.AlignCenter)
        self.xorgParamsLineEdit = QLineEdit(self.x11rdpGroupBox)
        self.xorgParamsLineEdit.setObjectName(u"xorgParamsLineEdit")
        self.xorgParamsLineEdit.setGeometry(QRect(6, 26, 539, 27))
        self.xorgParamsLineEdit.setAutoFillBackground(False)
        self.stackedWidget.addWidget(self.sesmanIniEditPage)
        self.keyboardConfigPage = QWidget()
        self.keyboardConfigPage.setObjectName(u"keyboardConfigPage")
        self.label_2 = QLabel(self.keyboardConfigPage)
        self.label_2.setObjectName(u"label_2")
        self.label_2.setGeometry(QRect(-5, 0, 1091, 676))
        self.label_2.setPixmap(QPixmap(u":/backgrounds/images/backgrounds/StackedWidgetBackground.png"))
        self.generatedkeymapgroup = QGroupBox(self.keyboardConfigPage)
        self.generatedkeymapgroup.setObjectName(u"generatedkeymapgroup")
        self.generatedkeymapgroup.setGeometry(QRect(40, 75, 1011, 275))
        font18 = QFont()
        font18.setFamily(u"Arial")
        font18.setPointSize(14)
        self.generatedkeymapgroup.setFont(font18)
        self.keymapbrowser = QPlainTextEdit(self.generatedkeymapgroup)
        self.keymapbrowser.setObjectName(u"keymapbrowser")
        self.keymapbrowser.setGeometry(QRect(760, 22, 243, 241))
        font19 = QFont()
        font19.setPointSize(11)
        self.keymapbrowser.setFont(font19)
        self.keymapbrowser.setUndoRedoEnabled(False)
        self.keymapbrowser.setTextInteractionFlags(Qt.TextSelectableByKeyboard|Qt.TextSelectableByMouse)
        self.label_37 = QLabel(self.generatedkeymapgroup)
        self.label_37.setObjectName(u"label_37")
        self.label_37.setGeometry(QRect(16, 48, 739, 183))
        font20 = QFont()
        font20.setPointSize(13)
        font20.setBold(True)
        font20.setItalic(False)
        font20.setWeight(75)
        self.label_37.setFont(font20)
        self.label_37.setAutoFillBackground(False)
        self.label_37.setFrameShape(QFrame.StyledPanel)
        self.label_37.setFrameShadow(QFrame.Raised)
        self.label_37.setTextFormat(Qt.RichText)
        self.label_37.setScaledContents(True)
        self.label_37.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.label_37.setWordWrap(True)
        self.keymapgenerationlabel = QLabel(self.keyboardConfigPage)
        self.keymapgenerationlabel.setObjectName(u"keymapgenerationlabel")
        self.keymapgenerationlabel.setGeometry(QRect(425, 20, 287, 41))
        font21 = QFont()
        font21.setFamily(u"Arial")
        font21.setPointSize(16)
        self.keymapgenerationlabel.setFont(font21)
        self.keymapgenerationlabel.setFrameShape(QFrame.StyledPanel)
        self.keymapgenerationlabel.setFrameShadow(QFrame.Raised)
        self.keymapgenerationlabel.setLineWidth(2)
        self.keymapgenerationlabel.setMidLineWidth(2)
        self.keymapgenerationlabel.setAlignment(Qt.AlignCenter)
        self.selectkeymapgroup = QGroupBox(self.keyboardConfigPage)
        self.selectkeymapgroup.setObjectName(u"selectkeymapgroup")
        self.selectkeymapgroup.setGeometry(QRect(40, 370, 1011, 109))
        self.selectkeymapgroup.setFont(font18)
        self.selected_keymap_combobox = QComboBox(self.selectkeymapgroup)
        self.selected_keymap_combobox.setObjectName(u"selected_keymap_combobox")
        self.selected_keymap_combobox.setGeometry(QRect(26, 54, 409, 27))
        font22 = QFont()
        font22.setFamily(u"DejaVu Sans Mono")
        font22.setPointSize(12)
        self.selected_keymap_combobox.setFont(font22)
        self.label_17 = QLabel(self.selectkeymapgroup)
        self.label_17.setObjectName(u"label_17")
        self.label_17.setGeometry(QRect(762, 24, 237, 79))
        self.label_17.setFrameShape(QFrame.StyledPanel)
        self.label_17.setFrameShadow(QFrame.Raised)
        self.label_17.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.keymapcodelabel = QLabel(self.selectkeymapgroup)
        self.keymapcodelabel.setObjectName(u"keymapcodelabel")
        self.keymapcodelabel.setGeometry(QRect(838, 56, 87, 41))
        font23 = QFont()
        font23.setFamily(u"DejaVu Sans Mono")
        font23.setPointSize(18)
        self.keymapcodelabel.setFont(font23)
        self.keymapcodelabel.setFrameShape(QFrame.Box)
        self.keymapcodelabel.setFrameShadow(QFrame.Raised)
        self.keymapcodelabel.setAlignment(Qt.AlignCenter)
        self.keymapcodelabel.setTextInteractionFlags(Qt.TextSelectableByMouse)
        self.locale_autodetected_label = QLabel(self.selectkeymapgroup)
        self.locale_autodetected_label.setObjectName(u"locale_autodetected_label")
        self.locale_autodetected_label.setGeometry(QRect(448, 52, 297, 31))
        font24 = QFont()
        font24.setFamily(u"Arial")
        font24.setPointSize(12)
        font24.setItalic(False)
        self.locale_autodetected_label.setFont(font24)
        self.locale_autodetected_label.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.locale_autodetected_label.setFrameShape(QFrame.StyledPanel)
        self.locale_autodetected_label.setFrameShadow(QFrame.Raised)
        self.locale_autodetected_label.setTextFormat(Qt.PlainText)
        self.locale_autodetected_label.setScaledContents(True)
        self.locale_autodetected_label.setAlignment(Qt.AlignCenter)
        self.locale_autodetected_label.setWordWrap(True)
        self.step3group = QGroupBox(self.keyboardConfigPage)
        self.step3group.setObjectName(u"step3group")
        self.step3group.setEnabled(False)
        self.step3group.setGeometry(QRect(40, 505, 1013, 125))
        self.step3group.setFont(font18)
        self.savekeymapasbutton = QPushButton(self.step3group)
        self.savekeymapasbutton.setObjectName(u"savekeymapasbutton")
        self.savekeymapasbutton.setGeometry(QRect(24, 54, 131, 30))
        self.label_34 = QLabel(self.step3group)
        self.label_34.setObjectName(u"label_34")
        self.label_34.setGeometry(QRect(764, 26, 237, 85))
        self.label_34.setFrameShape(QFrame.StyledPanel)
        self.label_34.setFrameShadow(QFrame.Raised)
        self.label_34.setAlignment(Qt.AlignHCenter|Qt.AlignTop)
        self.keymapNameLabel = QLabel(self.step3group)
        self.keymapNameLabel.setObjectName(u"keymapNameLabel")
        self.keymapNameLabel.setGeometry(QRect(772, 66, 221, 27))
        self.keymapNameLabel.setFrameShape(QFrame.Box)
        self.keymapNameLabel.setFrameShadow(QFrame.Raised)
        self.keymapNameLabel.setAlignment(Qt.AlignCenter)
        self.stackedWidget.addWidget(self.keyboardConfigPage)
        self.alabel = QLabel(self.centralwidget)
        self.alabel.setObjectName(u"alabel")
        self.alabel.setGeometry(QRect(6, 688, 1081, 43))
        font25 = QFont()
        font25.setPointSize(18)
        self.alabel.setFont(font25)
        self.alabel.setAlignment(Qt.AlignCenter)
        self.filenameFrame = QFrame(self.centralwidget)
        self.filenameFrame.setObjectName(u"filenameFrame")
        self.filenameFrame.setEnabled(True)
        self.filenameFrame.setGeometry(QRect(2, 684, 1083, 55))
        self.filenameFrame.setAutoFillBackground(True)
        self.filenameFrame.setFrameShape(QFrame.StyledPanel)
        self.filenameFrame.setFrameShadow(QFrame.Raised)
        self.filenameFrame.setLineWidth(6)
        self.filenameFrame.setMidLineWidth(6)
        self.fileopenlabel = QLabel(self.filenameFrame)
        self.fileopenlabel.setObjectName(u"fileopenlabel")
        self.fileopenlabel.setGeometry(QRect(5, 12, 827, 31))
        self.fileopenlabel.setFont(font6)
        self.fileopenlabel.setAutoFillBackground(False)
        self.fileopenlabel.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.fileopenlabel.setFrameShape(QFrame.StyledPanel)
        self.fileopenlabel.setFrameShadow(QFrame.Raised)
        self.fileopenlabel.setLineWidth(1)
        self.nameOfOpenFile = QLabel(self.filenameFrame)
        self.nameOfOpenFile.setObjectName(u"nameOfOpenFile")
        self.nameOfOpenFile.setGeometry(QRect(100, 14, 727, 26))
        font26 = QFont()
        font26.setPointSize(12)
        font26.setBold(False)
        font26.setWeight(50)
        self.nameOfOpenFile.setFont(font26)
        self.nameOfOpenFile.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.nameOfOpenFile.setFrameShape(QFrame.NoFrame)
        self.nameOfOpenFile.setFrameShadow(QFrame.Plain)
        self.nameOfOpenFile.setLineWidth(2)
        self.nameOfOpenFile.setScaledContents(False)
        self.label_4 = QLabel(self.filenameFrame)
        self.label_4.setObjectName(u"label_4")
        self.label_4.setGeometry(QRect(838, 12, 237, 31))
        self.label_4.setFont(font26)
        self.label_4.setAutoFillBackground(False)
        self.label_4.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.label_4.setFrameShape(QFrame.StyledPanel)
        self.label_4.setFrameShadow(QFrame.Raised)
        self.label_4.setLineWidth(2)
        self.label_4.setAlignment(Qt.AlignLeading|Qt.AlignLeft|Qt.AlignVCenter)
        self.configuredSessionsLabel = QLabel(self.filenameFrame)
        self.configuredSessionsLabel.setObjectName(u"configuredSessionsLabel")
        self.configuredSessionsLabel.setGeometry(QRect(1014, 19, 51, 19))
        font27 = QFont()
        font27.setPointSize(13)
        font27.setBold(False)
        font27.setWeight(50)
        self.configuredSessionsLabel.setFont(font27)
        self.configuredSessionsLabel.setAutoFillBackground(False)
        self.configuredSessionsLabel.setStyleSheet(u"background-color: rgb(255, 255, 255);")
        self.configuredSessionsLabel.setAlignment(Qt.AlignCenter)
        XRDPConfigurator.setCentralWidget(self.centralwidget)
        self.alabel.raise_()
        self.stackedWidget.raise_()
        self.filenameFrame.raise_()
        self.menubar = QMenuBar(XRDPConfigurator)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1088, 25))
        self.menubar.setFont(font)
        self.menubar.setAutoFillBackground(False)
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        font28 = QFont()
        font28.setFamily(u"Sans Serif")
        self.menuFile.setFont(font28)
        self.menuFile.setAutoFillBackground(False)
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menuPage = QMenu(self.menubar)
        self.menuPage.setObjectName(u"menuPage")
        self.menuPage.setEnabled(True)
        self.menuPreview = QMenu(self.menubar)
        self.menuPreview.setObjectName(u"menuPreview")
        self.menuGenerate = QMenu(self.menubar)
        self.menuGenerate.setObjectName(u"menuGenerate")
        XRDPConfigurator.setMenuBar(self.menubar)
        QWidget.setTabOrder(self.tabWidget, self.listeningAddressEntryBox)
        QWidget.setTabOrder(self.listeningAddressEntryBox, self.listeningPortEntryBox)
        QWidget.setTabOrder(self.listeningPortEntryBox, self.maxBppComboBox)
        QWidget.setTabOrder(self.maxBppComboBox, self.cryptLevelComboBox)
        QWidget.setTabOrder(self.cryptLevelComboBox, self.autoRunComboBox)
        QWidget.setTabOrder(self.autoRunComboBox, self.useBitMapCacheCheckBox)
        QWidget.setTabOrder(self.useBitMapCacheCheckBox, self.useBitMapCompCheckBox)
        QWidget.setTabOrder(self.useBitMapCompCheckBox, self.useBulkCompCheckBox)
        QWidget.setTabOrder(self.useBulkCompCheckBox, self.enableChannelsCheckBox)
        QWidget.setTabOrder(self.enableChannelsCheckBox, self.requireCredentialsCheckbox)
        QWidget.setTabOrder(self.requireCredentialsCheckbox, self.forkSessionsCheckBox)
        QWidget.setTabOrder(self.forkSessionsCheckBox, self.hideLogWindowCheckBox)
        QWidget.setTabOrder(self.hideLogWindowCheckBox, self.tcpNoDelayCheckBox)
        QWidget.setTabOrder(self.tcpNoDelayCheckBox, self.tcpKeepAliveCheckBox)
        QWidget.setTabOrder(self.tcpKeepAliveCheckBox, self.disableNewCursorsCheckBox)
        QWidget.setTabOrder(self.disableNewCursorsCheckBox, self.additionalPamErrorTextCheckbox)
        QWidget.setTabOrder(self.additionalPamErrorTextCheckbox, self.pamErrorText)
        QWidget.setTabOrder(self.pamErrorText, self.logFileNameEntryBox)
        QWidget.setTabOrder(self.logFileNameEntryBox, self.logLevelComboBox)
        QWidget.setTabOrder(self.logLevelComboBox, self.enableSyslogCheckBox)
        QWidget.setTabOrder(self.enableSyslogCheckBox, self.sysLogLevelComboBox)
        QWidget.setTabOrder(self.sysLogLevelComboBox, self.useRdpDrCheckBox)
        QWidget.setTabOrder(self.useRdpDrCheckBox, self.useRdpSndCheckBox)
        QWidget.setTabOrder(self.useRdpSndCheckBox, self.useDrDynVcCheckBox)
        QWidget.setTabOrder(self.useDrDynVcCheckBox, self.useClipRdrCheckBox)
        QWidget.setTabOrder(self.useClipRdrCheckBox, self.useRAILCheckBox)
        QWidget.setTabOrder(self.useRAILCheckBox, self.useXrdpVrCheckBox)
        QWidget.setTabOrder(self.useXrdpVrCheckBox, self.sesmanListeningAddressEntryBox)
        QWidget.setTabOrder(self.sesmanListeningAddressEntryBox, self.sesmanListeningPortEntryBox)
        QWidget.setTabOrder(self.sesmanListeningPortEntryBox, self.enableUserWindowManager)
        QWidget.setTabOrder(self.enableUserWindowManager, self.userWindowManagerEntryBox)
        QWidget.setTabOrder(self.userWindowManagerEntryBox, self.defaultWindowManagerEntryBox)
        QWidget.setTabOrder(self.defaultWindowManagerEntryBox, self.allowRootLoginCheckBox)
        QWidget.setTabOrder(self.allowRootLoginCheckBox, self.alwaysCheckGroupCheckBox)
        QWidget.setTabOrder(self.alwaysCheckGroupCheckBox, self.terminalServiceUsersEntryBox)
        QWidget.setTabOrder(self.terminalServiceUsersEntryBox, self.terminalServiceAdminsEntryBox)
        QWidget.setTabOrder(self.terminalServiceAdminsEntryBox, self.maxLoginRetrySpinBox)
        QWidget.setTabOrder(self.maxLoginRetrySpinBox, self.x11DisplayOffsetSpinBox)
        QWidget.setTabOrder(self.x11DisplayOffsetSpinBox, self.maxSessionsSpinBox)
        QWidget.setTabOrder(self.maxSessionsSpinBox, self.idleTimeLimitSpinBox)
        QWidget.setTabOrder(self.idleTimeLimitSpinBox, self.disconnectedTimeLimitSpinBox)
        QWidget.setTabOrder(self.disconnectedTimeLimitSpinBox, self.killDisconnectedCheckBox)
        QWidget.setTabOrder(self.killDisconnectedCheckBox, self.sesmanLogFileNameEntryBox)
        QWidget.setTabOrder(self.sesmanLogFileNameEntryBox, self.sesmanLogLevelComboBox)
        QWidget.setTabOrder(self.sesmanLogLevelComboBox, self.enableSesmanSyslogCheckBox)
        QWidget.setTabOrder(self.enableSesmanSyslogCheckBox, self.sesmanSysLogLevelComboBox)
        QWidget.setTabOrder(self.sesmanSysLogLevelComboBox, self.deleteSessionButton)
        QWidget.setTabOrder(self.deleteSessionButton, self.sessionsTab)
        QWidget.setTabOrder(self.sessionsTab, self.addNewSessionButton)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuPage.menuAction())
        self.menubar.addAction(self.menuPreview.menuAction())
        self.menubar.addAction(self.menuGenerate.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpenXrdp_ini)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpenSesman_ini)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionSave_as)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit)
        self.menuHelp.addAction(self.actionAbout)
        self.menuPage.addSeparator()
        self.menuPage.addAction(self.actionXrdp_ini)
        self.menuPage.addSeparator()
        self.menuPage.addAction(self.actionSesman_ini)
        self.menuPage.addSeparator()
        self.menuPage.addAction(self.actionLogin_Window)
        self.menuPage.addSeparator()
        self.menuPreview.addAction(self.actionPreview)
        self.menuGenerate.addAction(self.actionKeymaps)

        self.retranslateUi(XRDPConfigurator)

        self.stackedWidget.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.sessionsTab.setCurrentIndex(-1)


        QMetaObject.connectSlotsByName(XRDPConfigurator)
    # setupUi

    def retranslateUi(self, XRDPConfigurator):
        XRDPConfigurator.setWindowTitle(QCoreApplication.translate("XRDPConfigurator", u"XRDPConfigurator", None))
        self.actionSave.setText(QCoreApplication.translate("XRDPConfigurator", u"Save", None))
        self.actionQuit.setText(QCoreApplication.translate("XRDPConfigurator", u"Quit", None))
        self.actionOpenXrdp_ini.setText(QCoreApplication.translate("XRDPConfigurator", u"Open xrdp.ini", None))
        self.actionAbout.setText(QCoreApplication.translate("XRDPConfigurator", u"About", None))
        self.actionSave_as.setText(QCoreApplication.translate("XRDPConfigurator", u"Save as...", None))
        self.actionPreview.setText(QCoreApplication.translate("XRDPConfigurator", u"Preview INI", None))
        self.actionOpenSesman_ini.setText(QCoreApplication.translate("XRDPConfigurator", u"Open sesman.ini", None))
        self.actionXrdp_ini.setText(QCoreApplication.translate("XRDPConfigurator", u"xrdp.ini", None))
        self.actionSesman_ini.setText(QCoreApplication.translate("XRDPConfigurator", u"sesman.ini", None))
        self.actionKeymaps.setText(QCoreApplication.translate("XRDPConfigurator", u"Keymaps", None))
        self.actionLogin_Window.setText(QCoreApplication.translate("XRDPConfigurator", u"Login Window", None))
        self.WALLPAPER_3.setText("")
        self.label_38.setText(QCoreApplication.translate("XRDPConfigurator", u"v1.0", None))
        self.label_6.setText("")
        self.WALLPAPER_4.setText("")
        self.label_49.setText(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This is the <span style=\" font-weight:600;\">xrdp.ini</span> configuration page for the <span style=\" font-weight:600;\">[globals]</span> , <span style=\" font-weight:600;\">[logging]</span> , and <span style=\" font-weight:600;\">[channels]</span> sections of that file.<br/>To configure the <span style=\" font-weight:600;\">[sessions]</span> section, click on the <span style=\" font-weight:600;\">[sessions]</span> tab above. To configure the xrdp login screen, go to <span style=\" font-weight:600;\">Edit---&gt;Login Window</span>.</p></body></html>", None))
        self.groupBox_4.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[globals]", None))
        self.autoRunComboBox.setItemText(0, "")

#if QT_CONFIG(tooltip)
        self.autoRunComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Automatically run the configured session specified.</p><p>By default a drop-down list with all available connections is shown in the xrdp login window.</p><p>A connection can also be chosen by the connecting client by setting the LOGIN DOMAIN to a valid session name.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_7.setText(QCoreApplication.translate("XRDPConfigurator", u"Port", None))
        self.label_8.setText(QCoreApplication.translate("XRDPConfigurator", u"Maximum bpp", None))
#if QT_CONFIG(tooltip)
        self.listeningAddressEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>The IP address that xrdp will listen on for connections. Setting this to <span style=\" font-weight:600;\">0.0.0.0</span> tells xrdp to listen on all interfaces.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.listeningPortEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Specify TCP port to listen on for incoming connections. The default for RDP is <span style=\" font-weight:600;\">3389</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.listeningPortEntryBox.setText(QCoreApplication.translate("XRDPConfigurator", u"3389", None))
        self.maxBppComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"8", None))
        self.maxBppComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"15", None))
        self.maxBppComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"16", None))
        self.maxBppComboBox.setItemText(3, QCoreApplication.translate("XRDPConfigurator", u"24", None))

#if QT_CONFIG(tooltip)
        self.maxBppComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Limit the colour depth by specifying the maximum number of bits per pixel</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_5.setText(QCoreApplication.translate("XRDPConfigurator", u"Listening IP address", None))
        self.label_14.setText(QCoreApplication.translate("XRDPConfigurator", u"Crypt Level", None))
        self.label_9.setText(QCoreApplication.translate("XRDPConfigurator", u"Autorun Session", None))
        self.cryptLevelComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"low", None))
        self.cryptLevelComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"medium", None))
        self.cryptLevelComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"high", None))

#if QT_CONFIG(tooltip)
        self.cryptLevelComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Specifies the encryption level for the RDP connection.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_5.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Miscellaneous options...", None))
#if QT_CONFIG(tooltip)
        self.allowMultimonCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Allow multi monitor support</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.allowMultimonCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Allow Multimon", None))
#if QT_CONFIG(tooltip)
        self.tcpNoDelayCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If enabled, no buffering will be performed in the TCP stack for the listening socket.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tcpNoDelayCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"TCP_NODELAY", None))
#if QT_CONFIG(tooltip)
        self.tcpKeepAliveCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If enabled, and the network connection disappears without closing messages, the connection will be closed.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tcpKeepAliveCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"TCP_KEEPALIVE", None))
#if QT_CONFIG(tooltip)
        self.useBitMapCacheCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables bitmap caching in xrdp</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useBitMapCacheCheckBox.setWhatsThis(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">Enables bitmap caching in xrdp.</span></p></body></html>", u"This option enables bitmap caching in xrdp "))
#endif // QT_CONFIG(whatsthis)
        self.useBitMapCacheCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Bitmap Cache", None))
#if QT_CONFIG(tooltip)
        self.useBulkCompCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables compression of bulk data in xrdp</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.useBulkCompCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Bulk Compression", None))
#if QT_CONFIG(tooltip)
        self.enableChannelsCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If unset, this option disables all xrdp channels.</p><p>You will probably want to keep this enabled :)</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.enableChannelsCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable Channels", None))
#if QT_CONFIG(tooltip)
        self.requireCredentialsCheckbox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>When enabled, RDP clients <span style=\" font-style:italic; color:#ff0000;\">must</span> supply id/password credentials at the command line.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.requireCredentialsCheckbox.setText(QCoreApplication.translate("XRDPConfigurator", u"Require Credentials", None))
#if QT_CONFIG(tooltip)
        self.hideLogWindowCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If set, xrdp will not show a window for log messages.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.hideLogWindowCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Hide Log Window", None))
#if QT_CONFIG(tooltip)
        self.forkSessionsCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If set, xrdp forks a sub-process for each incoming connection, instead of using threads.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.forkSessionsCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Fork Sessions", None))
#if QT_CONFIG(tooltip)
        self.useBitMapCompCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables bitmap compression in xrdp</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.useBitMapCompCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Bitmap Compression", None))
#if QT_CONFIG(tooltip)
        self.disableNewCursorsCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Activate this option if your RDP client does not support XRDP's &quot;new cursors&quot;.</p><p>If you get a blocky cursor or other cursor strangeness on your RDP client window, try enabling this option.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.disableNewCursorsCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Disable New Cursors", None))
#if QT_CONFIG(tooltip)
        self.pamErrorText.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>When PAM Error Text option is enabled, this is the text that the user will see.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.pamErrorText.setPlaceholderText(QCoreApplication.translate("XRDPConfigurator", u"(e.g. change your password according to policy at http://url)", None))
#if QT_CONFIG(tooltip)
        self.additionalPamErrorTextCheckbox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>When enabled, this sets the PAM error text in a gateway setup.</p><p><span style=\" color:#ff0000;\">Maximum of 256 characters.</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.additionalPamErrorTextCheckbox.setText(QCoreApplication.translate("XRDPConfigurator", u"PAM Error Text", None))
        self.groupBox_6.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[channels]", None))
#if QT_CONFIG(tooltip)
        self.useXrdpVrCheckBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useXrdpVrCheckBox.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.useXrdpVrCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable XRDP Video Streaming Channel (xrdpvr)", None))
#if QT_CONFIG(tooltip)
        self.useClipRdrCheckBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useClipRdrCheckBox.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.useClipRdrCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable Clipboard Re-direction Channel (cliprdr)", None))
#if QT_CONFIG(tooltip)
        self.useRdpSndCheckBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useRdpSndCheckBox.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.useRdpSndCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable Sound Re-direction Channel (rdpsnd)", None))
#if QT_CONFIG(tooltip)
        self.useDrDynVcCheckBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useDrDynVcCheckBox.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.useDrDynVcCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable initiation of Additional Dynamic Virtual Channels (drdynvc)", None))
#if QT_CONFIG(tooltip)
        self.useRAILCheckBox.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.useRAILCheckBox.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.useRAILCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable Remote Applications Integrated Locally channel (RAIL)", None))
        self.useRdpDrCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable Device Re-direction Channel (rdpdr)", None))
        self.groupBox_3.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[logging]", None))
#if QT_CONFIG(tooltip)
        self.enableSyslogCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables logging to Syslog as well as the xrdp log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.enableSyslogCheckBox.setWhatsThis(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">Enables bitmap caching in xrdp.</span></p></body></html>", u"This option enables bitmap caching in xrdp "))
#endif // QT_CONFIG(whatsthis)
        self.enableSyslogCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable log to Syslog", None))
        self.label_12.setText(QCoreApplication.translate("XRDPConfigurator", u"Syslog Level", None))
        self.label_11.setText(QCoreApplication.translate("XRDPConfigurator", u"Log Level", None))
        self.label_10.setText(QCoreApplication.translate("XRDPConfigurator", u"Log file name", None))
#if QT_CONFIG(tooltip)
        self.logFileNameEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This is the path &amp; name of the xrdp log file.</p><p>You can specify a relative path or an absolute path.</p><p>The default is:<br/>${SES\u2010MAN_LOG_DIR}/xrdp.log<br/><br/>Which in most cases the path is <span style=\" font-weight:600;\">/etc/xrdp</span> and the file name is <span style=\" font-weight:600;\">xrdp.log</span>.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sysLogLevelComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"CORE", u"Log only core messages. these messages are _always_ logged, regardless the logging level selected. "))
        self.sysLogLevelComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"ERROR", None))
        self.sysLogLevelComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"WARNING", None))
        self.sysLogLevelComboBox.setItemText(3, QCoreApplication.translate("XRDPConfigurator", u"INFO", None))
        self.sysLogLevelComboBox.setItemText(4, QCoreApplication.translate("XRDPConfigurator", u"DEBUG", None))

#if QT_CONFIG(tooltip)
        self.sysLogLevelComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Set the Syslog log-level.</p><p>This will be less than or equal to the xrdp log file level.</p><p>If you change the xrdp log file level lower, then the Syslog level will also be reduced to that level.</p><p>The Syslog level will always be the same as the xrdp log level or lower.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.logLevelComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"CORE", u"Log only core messages. these messages are _always_ logged, regardless the logging level selected. "))
        self.logLevelComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"ERROR", None))
        self.logLevelComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"WARNING", None))
        self.logLevelComboBox.setItemText(3, QCoreApplication.translate("XRDPConfigurator", u"INFO", None))
        self.logLevelComboBox.setItemText(4, QCoreApplication.translate("XRDPConfigurator", u"DEBUG", None))

#if QT_CONFIG(tooltip)
        self.logLevelComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>The level at which xrdp messages are logged.</p><p>There are 5 possible values;</p><p><span style=\" font-weight:600;\">CORE</span> - Only log &quot;core&quot; messages - these are always logged and are included with any other log levels selected.</p><p><span style=\" font-weight:600;\">ERROR</span> - Only log error messages.</p><p><span style=\" font-weight:600;\">WARNING</span> - Will log warning and error messages.</p><p><span style=\" font-weight:600;\">INFO</span> - Will log warning, error, and informational messages.</p><p><span style=\" font-weight:600;\">DEBUG</span> - Everything will be logged. Additional low-level messages suitable for developers will be logged if xrdp was compiled in debug mode.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.globalsSettings), QCoreApplication.translate("XRDPConfigurator", u"[globals] , [logging] , [channels]", None))
        self.WALLPAPER_2.setText("")
        self.label_48.setText(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-size:11pt; font-weight:600;\">Each session in an xrdp.ini file is represented by a tab below. You can rearrange the order of the sessions by dragging the tabs. Sessions can be renamed by editing Session Name.</span></p></body></html>", None))
        self.addNewSessionButton.setText(QCoreApplication.translate("XRDPConfigurator", u"Add\n"
"Session", None))
#if QT_CONFIG(tooltip)
        self.deleteSessionButton.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Click this button to <span style=\" font-style:italic; color:#9e4a4a;\">remove</span> the currently selected session altogether.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.deleteSessionButton.setText(QCoreApplication.translate("XRDPConfigurator", u"Delete\n"
"Session", None))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.sess_Tab), QCoreApplication.translate("XRDPConfigurator", u"[sessions]", None))
        self.WALLPAPER.setText("")
        self.sesmanGlobalsGroupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Globals]", None))
#if QT_CONFIG(tooltip)
        self.sesmanListeningPortEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">The TCP port that xrdp-sesman listens on.<br/>The default is 3350.</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sesmanListeningPortEntryBox.setText(QCoreApplication.translate("XRDPConfigurator", u"3350", None))
        self.label_19.setText(QCoreApplication.translate("XRDPConfigurator", u"Sesman Listening IP address", None))
        self.label_20.setText(QCoreApplication.translate("XRDPConfigurator", u"Sesman Listening Port", None))
#if QT_CONFIG(tooltip)
        self.enableUserWindowManager.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables a user-specific window manager. Meaning that a user can define their own script, which will be executed by sesman after a user enters their login details and the session begins to proceed.</p><p>The name of the script is specified in the <span style=\" font-weight:600;\">User Window Manager</span> entry box.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.enableUserWindowManager.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable User Window Manager", None))
        self.label_22.setText(QCoreApplication.translate("XRDPConfigurator", u"Default Window Manager", None))
        self.label_21.setText(QCoreApplication.translate("XRDPConfigurator", u"User Window Manager", None))
#if QT_CONFIG(tooltip)
        self.sesmanListeningAddressEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">The IP address that xrdp-sesman will listen on for connections.<br/>Usually set to 127.0.0.1</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.userWindowManagerEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If <span style=\" font-weight:600;\">User Window Manager</span> is enabled, this is the name of the script which will be executed by sesman when a session starts.</p><p>The path is relative to the user's <span style=\" font-weight:600;\">home</span> directory.</p><p><span style=\" font-weight:600;\">e.g.</span> For a standard user account, if you enter a script name of &quot;<span style=\" font-weight:600; font-style:italic;\">wmstart.sh</span>&quot;, sesman will execute a script located at <span style=\" font-weight:600; font-style:italic;\">/home/&lt;userdirectory&gt;/wmstart.sh</span> .</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.defaultWindowManagerEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This is the system-wide default name of the script executed by sesman. This will be executed during the start of the session if <span style=\" font-weight:600;\">User Window Manager</span> is disabled or if the <span style=\" font-weight:600;\">User Window Manager script</span> was not found.</p><p>This particular script is usually located in <span style=\" font-weight:600;\">/etc/xrdp</span>.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sesmanSecurityGroupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Security]", None))
        self.label_25.setText(QCoreApplication.translate("XRDPConfigurator", u"Max Login Retries", None))
#if QT_CONFIG(tooltip)
        self.alwaysCheckGroupCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If disabled, login will be permitted if the <span style=\" font-weight:600;\">Terminal Server Users</span> option is not defined.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.alwaysCheckGroupCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Always Group Check", None))
        self.label_24.setText(QCoreApplication.translate("XRDPConfigurator", u"Terminal Service Admins", None))
        self.label_23.setText(QCoreApplication.translate("XRDPConfigurator", u"Terminal Service Users", None))
#if QT_CONFIG(tooltip)
        self.terminalServiceAdminsEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Sets the group name to which a user needs to belong to, to have Xrdp session management rights.</p><p><span style=\" font-weight:600;\">This option is ignored in earlier versions of Xrdp (e.g. version 0.6).</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.terminalServiceAdminsEntryBox.setText("")
#if QT_CONFIG(tooltip)
        self.allowRootLoginCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>If enabled, this allows root to login to an Xrdp session.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.allowRootLoginCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Allow Root Login", None))
#if QT_CONFIG(tooltip)
        self.maxLoginRetrySpinBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Sets the amount of times a login attempt is allowed.</p><p>Unlimited attempts are permitted if this is set to 0.</p><p>The default value is 3.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.terminalServiceUsersEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Sets the system group name of users who are permitted to log in to the Xrdp server.</p><p>If a user is not a member of that group, they will not be permitted to log in.</p><p><span style=\" font-weight:600;\">If this option is not set, or has been set with a non-existent/invalid group name, then login will be permitted for all users.</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.terminalServiceUsersEntryBox.setText("")
        self.sesmanSessionsGroupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Sessions]", None))
#if QT_CONFIG(tooltip)
        self.killDisconnectedCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>When enabled, any session which a user disconnects from (rather than logs out of) will be killed.</p><p><span style=\" font-weight:600;\">This option is ignored in older versions of Xrdp (e.g. version 0.6).</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.killDisconnectedCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Kill Disconnected", None))
#if QT_CONFIG(tooltip)
        self.disconnectedTimeLimitSpinBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This sets the time limit to wait, before killing a disconnected session.</p><p>If set to 0, then sessions will not be automatically killed.</p><p><br/><span style=\" font-weight:600;\">This option is ignored in earlier versions of Xrdp (e.g. version 0.6).</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.x11DisplayOffsetSpinBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This sets the offset used for allocating the first X display number available to sesman.</p><p>This prevents sesman interfering with normal X11 display allocations.</p><p>e.g. If this is set to 10, then the first Xrdp server display number will be &quot;10&quot;, which will not interfere with a system X display of &quot;0&quot;.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.idleTimeLimitSpinBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This sets the time limit before an idle session is disconnected.</p><p>If set to 0, this is disabled and no session is disconnected automatically.</p><p><span style=\" font-weight:600;\">This option is ignored in earlier versions of Xrdp (e.g. version 0.6).</span></p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_29.setText(QCoreApplication.translate("XRDPConfigurator", u"Idle Time Limit", None))
        self.label_27.setText(QCoreApplication.translate("XRDPConfigurator", u"Maximum Sessions", None))
#if QT_CONFIG(tooltip)
        self.maxSessionsSpinBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This sets the maximum number of sessions that your Xrdp server will allow to be run simultaneously.</p><p>e.g. If this is set to 5, then your system will only allow a maximum of 5 Xrdp sessions on at any one time.</p><p>If this is set to 0, then the session amount allowed is unlimited.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_28.setText(QCoreApplication.translate("XRDPConfigurator", u"Disconnected\n"
"Time Limit", None))
        self.label_26.setText(QCoreApplication.translate("XRDPConfigurator", u"X11 Display Offset", None))
        self.groupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Logging]", None))
#if QT_CONFIG(tooltip)
        self.enableSesmanSyslogCheckBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Enables logging to Syslog as well as the sesman log.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(whatsthis)
        self.enableSesmanSyslogCheckBox.setWhatsThis(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">Enables bitmap caching in xrdp.</span></p></body></html>", u"This option enables bitmap caching in xrdp "))
#endif // QT_CONFIG(whatsthis)
        self.enableSesmanSyslogCheckBox.setText(QCoreApplication.translate("XRDPConfigurator", u"Enable sesman log to Syslog", None))
        self.label_31.setText(QCoreApplication.translate("XRDPConfigurator", u"Log Level", None))
        self.label_30.setText(QCoreApplication.translate("XRDPConfigurator", u"Sesman Log file name", None))
        self.label_32.setText(QCoreApplication.translate("XRDPConfigurator", u"Syslog Level", None))
        self.sesmanLogLevelComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"CORE", u"Log only core messages. these messages are _always_ logged, regardless the logging level selected. "))
        self.sesmanLogLevelComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"ERROR", None))
        self.sesmanLogLevelComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"WARNING", None))
        self.sesmanLogLevelComboBox.setItemText(3, QCoreApplication.translate("XRDPConfigurator", u"INFO", None))
        self.sesmanLogLevelComboBox.setItemText(4, QCoreApplication.translate("XRDPConfigurator", u"DEBUG", None))

#if QT_CONFIG(tooltip)
        self.sesmanLogLevelComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>The level at which sesman messages are logged.</p><p>There are 5 possible values;</p><p><span style=\" font-weight:600;\">CORE</span> - Only log &quot;core&quot; messages - these are always logged and are included with any other log levels selected.</p><p><span style=\" font-weight:600;\">ERROR</span> - Only log error messages.</p><p><span style=\" font-weight:600;\">WARNING</span> - Will log warning and error messages.</p><p><span style=\" font-weight:600;\">INFO</span> - Will log warning, error, and informational messages.</p><p><span style=\" font-weight:600;\">DEBUG</span> - Everything will be logged. Additional low-level messages suitable for developers will be logged if sesman was compiled in debug mode.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.sesmanSysLogLevelComboBox.setItemText(0, QCoreApplication.translate("XRDPConfigurator", u"CORE", u"Log only core messages. these messages are _always_ logged, regardless the logging level selected. "))
        self.sesmanSysLogLevelComboBox.setItemText(1, QCoreApplication.translate("XRDPConfigurator", u"ERROR", None))
        self.sesmanSysLogLevelComboBox.setItemText(2, QCoreApplication.translate("XRDPConfigurator", u"WARNING", None))
        self.sesmanSysLogLevelComboBox.setItemText(3, QCoreApplication.translate("XRDPConfigurator", u"INFO", None))
        self.sesmanSysLogLevelComboBox.setItemText(4, QCoreApplication.translate("XRDPConfigurator", u"DEBUG", None))

#if QT_CONFIG(tooltip)
        self.sesmanSysLogLevelComboBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>Set the Syslog log-level.</p><p>This will be less than or equal to the sesman log file level.</p><p>If you change the sesman log file level lower, then the Syslog level will also be reduced to that level.</p><p>The Syslog level will always be the same as the sesman log level or lower.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(tooltip)
        self.sesmanLogFileNameEntryBox.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>This is the path &amp; name of the sesman log file.</p><p>You can specify a relative path or an absolute path.</p><p>The default is:<br/>${SES\u2010MAN_LOG_DIR}/sesman.log<br/><br/>Which in most cases the path is <span style=\" font-weight:600;\">/etc/xrdp</span> and the file name is <span style=\" font-weight:600;\">sesman.log</span>.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.groupBox_2.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Back-end X Server Parameters]", None))
        self.xvncGroupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[Xvnc]", None))
#if QT_CONFIG(tooltip)
        self.xvncParamsLineEdit.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>These are the parameters used when xrdp-sesman starts an Xvnc back-end X server.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.x11rdpGroupBox.setTitle(QCoreApplication.translate("XRDPConfigurator", u"[X11rdp]", None))
#if QT_CONFIG(tooltip)
        self.xorgParamsLineEdit.setToolTip(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>These are the parameters used when xrdp-sesman starts an X11rdp back-end X server.</p></body></html>", None))
#endif // QT_CONFIG(tooltip)
        self.label_2.setText("")
        self.generatedkeymapgroup.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Generated Keymap...", None))
        self.keymapbrowser.setDocumentTitle(QCoreApplication.translate("XRDPConfigurator", u"output", None))
        self.label_37.setText(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>The shown output is the key mappings as seen by the X server you are running this utility on.<br/><br/>By selecting a country code, you can then save the keymap with the appropriate filename, which is automatically generated.<br/><br/>The generated file should be placed in the <span style=\" font-weight:600;\">/etc/xrdp </span>directory of the xrdp server.</p></body></html>", None))
        self.keymapgenerationlabel.setText(QCoreApplication.translate("XRDPConfigurator", u"Keymap Generation", None))
        self.selectkeymapgroup.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Select Country Keymap To Generate...", None))
        self.label_17.setText(QCoreApplication.translate("XRDPConfigurator", u"Code", None))
        self.keymapcodelabel.setText("")
        self.locale_autodetected_label.setText(QCoreApplication.translate("XRDPConfigurator", u"Current selection was auto-detected.", None))
        self.step3group.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Save Keymap...", None))
        self.savekeymapasbutton.setText(QCoreApplication.translate("XRDPConfigurator", u"Save As...", None))
        self.label_34.setText(QCoreApplication.translate("XRDPConfigurator", u"Keymap Name", None))
        self.keymapNameLabel.setText(QCoreApplication.translate("XRDPConfigurator", u"TextLabel", None))
        self.alabel.setText(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p><span style=\" font-weight:600;\">Copyight \u00a9 2014 Kevin Cave</span></p></body></html>", None))
        self.fileopenlabel.setText(QCoreApplication.translate("XRDPConfigurator", u"<html><head/><body><p>File Name :</p></body></html>", None))
        self.nameOfOpenFile.setText(QCoreApplication.translate("XRDPConfigurator", u"No file open.", None))
        self.label_4.setText(QCoreApplication.translate("XRDPConfigurator", u"Configured Sessions :", None))
        self.configuredSessionsLabel.setText(QCoreApplication.translate("XRDPConfigurator", u"0", None))
        self.menuFile.setTitle(QCoreApplication.translate("XRDPConfigurator", u"File", None))
        self.menuHelp.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Help", None))
        self.menuPage.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Edit", None))
        self.menuPreview.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Preview", None))
        self.menuGenerate.setTitle(QCoreApplication.translate("XRDPConfigurator", u"Generate", None))
    # retranslateUi

